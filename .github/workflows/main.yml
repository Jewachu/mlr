on:
  push:
    branches:
      - gh_actions
  pull_request:
    branches:
      - master

name: GH Actions via {tic}

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6'}
        - { os: macOS-latest, r: '3.6'}
        - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-18.04, r: '3.3'}
        - { os: ubuntu-18.04, r: '3.4'}
        - { os: ubuntu-18.04, r: '3.5'}
        - { os: ubuntu-18.04, r: '3.6'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      ACTIONS_RUNNER_DEBUG: ${{ secrets.ACTIONS_RUNNER_DEBUG }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.x'

      # - name: Cache R packages
      #   if: runner.os != 'Windows'
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-r-${{ matrix.config.r }}
      #     restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      #- name: Prepare ccache timestamp
      #  if: runner.os != 'Windows'
      #  id: ccache_cache_timestamp
      #  shell: cmake -P {0}
      #  run: |
      #    string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
      #    message("::set-output name=timestamp::${current_date}")
#
      #- name: Cache ccache
      #  if: runner.os != 'Windows'
      #  uses: actions/cache@v1.1.0
      #  with:
      #    path: .ccache
      #    key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
      #    restore-keys: |
      #      ${{ runner.os }}-r-${{ matrix.config.r }}-ccache-

      # only on macOS devel, using binaries on release
      # need to set pkgType env var, otherwise remotes::install_cran() errors
      # because R tries to install binaries for R-devel which do not exist
      - name: Install dependencies (mac-devel)
        if: runner.os == 'macOS' && matrix.config.os == 'macOS-latest' && matrix.config.r == 'devel'
        run: |
          export pkgType="source"
          brew install ccache
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          Rscript -e "if (!requireNamespace('remotes')) {install.packages('remotes')}"
          echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) install.packages('curl')"
          Rscript -e "remotes::install_github('ropensci/tic@gh-actions')" -e "print(tic::dsl_load())" -e "tic::prepare_all_stages()"
          Rscript -e "tic::before_install()"
          Rscript -e "tic::install()"

      - name: ccache-linux
        if: runner.os == 'Linux'
        run: |
          sudo apt install ccache
          mkdir -p ~/.R && echo -e 'CXX_STD = CXX14\n\nCC=ccache gcc -std=gnu99\nCXX=ccache g++\nCXX11=ccache g++ -std=gnu99\nCXX14=ccache g++ -std=gnu99\nC11=ccache g++\nC14=ccache g++\nFC=ccache gfortran\nF77=ccache gfortran' > $HOME/.R/Makevars
          mkdir -p ~/.ccache && echo -e 'max_size = 5.0G\nsloppiness = include_file_ctime\nhash_dir=false' > $HOME/.ccache/ccache.conf
          echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
          sudo R CMD javareconf

      - name: ccache-macOS
        if: runner.os == 'macOS'
        run: |
          brew install ccache
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          mkdir -p ~/.R && echo -e 'CXX_STD = CXX14\n\nCC=ccache clang -std=gnu99\nCXX=ccache clang++\nCXX11=ccache clang++ -std=gnu99\nCXX14=ccache clang++ -std=gnu99\nC11=ccache clang++\nC14=ccache clang++\nFC=ccache gfortran\nF77=ccache gfortran' > $HOME/.R/Makevars
          mkdir -p ~/.ccache && echo -e 'max_size = 5.0G\nsloppiness = include_file_ctime\nhash_dir=false' > $HOME/.ccache/ccache.conf
          echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
          sudo R CMD javareconf

      # for some strange Windows reason this step and the next one need to be decoupled
      - name: Prepare tic
        if: matrix.config.r != 'devel' || ( runner.os == 'Linux' && matrix.config.r != 'devel' )
        run: |
          Rscript -e "if (!requireNamespace('remotes')) {install.packages('remotes')}"
          Rscript -e "if (getRversion() < '3.2' && !requireNamespace('curl')) {install.packages('curl')}"

      - name: Install dependencies
        if: matrix.config.r != 'devel' || ( runner.os == 'Linux' && matrix.config.r != 'devel' )
        run: Rscript -e "remotes::install_github('ropensci/tic@gh-actions')" -e "print(tic::dsl_load())" -e "tic::prepare_all_stages()" -e "tic::before_install()" -e "tic::install()"

      - name: Check
        run: Rscript -e 'tic::script()'

      - name: after_success
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: Rscript -e "tic::after_success()"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
